openapi: 3.0.0
info:
  title: Orders Management API
  description: API for managing customer orders.
  version: 1.0.0
servers:
  - url: https://api.example.com/v1
    description: Main production server

paths:
  /orders:
    get:
      summary: Retrieve a list of all orders
      operationId: getAllOrders
      tags:
        - Orders
      responses:
        '200':
          description: A list of orders retrieved successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object # Placeholder for Order schema
                  properties:
                    orderId:
                      type: string
                      example: "ORD12345"
                    customerId:
                      type: string
                      example: "CUST67890"
                    orderDate:
                      type: string
                      format: date-time
                      example: "2023-07-29T10:00:00Z"
                    totalAmount:
                      type: number
                      format: float
                      example: 150.75
        '500':
          description: Internal Server Error
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
    post:
      summary: Create a new order
      operationId: createOrder
      tags:
        - Orders
      requestBody:
        description: Order details to create
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                customerId:
                  type: string
                  description: The ID of the customer placing the order.
                  example: "CUST67890"
                items:
                  type: array
                  description: List of items in the order.
                  items:
                    type: object
                    properties:
                      productId:
                        type: string
                        example: "PROD001"
                      quantity:
                        type: integer
                        example: 2
                      price:
                        type: number
                        format: float
                        example: 25.50
              required:
                - customerId
                - items
      responses:
        '201':
          description: Order created successfully
          headers:
            Location:
              description: URI of the newly created order
              schema:
                type: string
                format: uri
                example: /orders/ORD12345
          content:
            application/json:
              schema:
                type: object
                properties:
                  orderId:
                    type: string
                    description: The unique identifier of the newly created order.
                    example: "ORD12345"
                  message:
                    type: string
                    description: Confirmation message.
                    example: Order created successfully.
        '400':
          description: Bad Request - Invalid input data
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '404':
          description: Not Found - Customer ID does not exist
          content:
            application/problem+json:
              schema:
                type: object
                properties:
                  type:
                    type: string
                    format: uri
                    description: A URI reference that identifies the problem type.
                    example: https://api.example.com/probs/not-found
                  title:
                    type: string
                    description: A short, human-readable summary of the problem type.
                    example: Resource not found.
                  status:
                    type: integer
                    format: int32
                    description: The HTTP status code generated by the origin server for this occurrence of the problem.
                    example: 404
                  detail:
                    type: string
                    description: A human-readable explanation specific to this occurrence of the problem.
                    example: The customer with the provided ID was not found.
                  instance:
                    type: string
                    format: uri
                    description: A URI reference that identifies the specific occurrence of the problem.
                    example: /orders
                  resourceId:
                    type: string
                    description: The ID of the resource that was not found.
                    example: CUST67890

components:
  schemas:
    ProblemDetails:
      type: object
      properties:
        type:
          type: string
          format: uri
          description: A URI reference that identifies the problem type.
          example: https://api.example.com/probs/validation-error
        title:
          type: string
          description: A short, human-readable summary of the problem type.
          example: Your request data is invalid.
        status:
          type: integer
          format: int32
          description: The HTTP status code generated by the origin server for this occurrence of the problem.
          example: 400
        detail:
          type: string
          description: A human-readable explanation specific to this occurrence of the problem.
          example: The provided data does not comply with the required structure or constraints. Please check the 'errors' array for specific issues.
        instance:
          type: string
          format: uri
          description: A URI reference that identifies the specific occurrence of the problem.
          example: /orders
        errors:
          type: array
          description: An array of specific validation errors.
          items:
            type: object
            properties:
              detail:
                type: string
                description: Description of the specific validation error.
                example: Customer ID is required.
              pointer:
                type: string
                description: A JSON Pointer to the location of the error within the request content.
                example: #/customerId
